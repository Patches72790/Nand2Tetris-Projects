// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    /* Decide on reset, load, or increment? */
    Mux16 (a=regOut, b=incremented, sel=inc, out=outOrIncr);
    Mux16 (a=outOrIncr, b=in, sel=load, out=outOrIncrOrIn);
    Mux16 (a=outOrIncrOrIn, b=zeroed, sel=reset, out=finalChoice);

    /* logic for increment and reset */
    Inc16 (in=regOut, out=incremented);
    And16 (a=regOut, b=false, out=zeroed);

    /* If any of control bits are set, then register needs to be loaded */
    Or (a=load, b=reset, out=loadOrReset);
    Or (a=loadOrReset, b=inc, out=doLoad);

    /* use choice as input, whichever control bit is set, and
        feed output back into control logic */
    Register (in=finalChoice, load=doLoad, out=regOut, out=out);
}

// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    //-- TODO need to find how to select input from addr to 2^addr
    //-- Make DMux8Way16 to select only
    DMux8Way16 (in=in, sel=address, a=ain, b=bin,
                                    c=cin, d=din,
                                    e=ein, f=fin,
                                    g=gin, h=hin);

    Register (in=ain, load=load, out=aout);
    Register (in=bin, load=load, out=bout);
    Register (in=cin, load=load, out=cout);
    Register (in=din, load=load, out=dout);
    Register (in=ein, load=load, out=eout);
    Register (in=fin, load=load, out=fout);
    Register (in=gin, load=load, out=gout);
    Register (in=hin, load=load, out=hout);

    Mux8Way16(a=aout, b=bout, c=cout, d=dout,
        e=eout, f=fout, g=gout, h=hout,
        sel=address, out=out);
}

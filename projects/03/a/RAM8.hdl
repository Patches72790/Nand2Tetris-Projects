// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    /* Find the correct address to read to */
    DMux8Way (in=load, sel=address, a=selA, b=selB, 
                          c=selC, d=selD, 
                          e=selE, f=selF, 
                          g=selG, h=selH);

    /* Actual array of registers 16bits x 8 */
    Register (in=in, load=selA, out=aout);
    Register (in=in, load=selB, out=bout);
    Register (in=in, load=selC, out=cout);
    Register (in=in, load=selD, out=dout);
    Register (in=in, load=selE, out=eout);
    Register (in=in, load=selF, out=fout);
    Register (in=in, load=selG, out=gout);
    Register (in=in, load=selH, out=hout);

    /* Output the selected address as specified by address bits */
    Mux8Way16(a=aout, b=bout, c=cout, d=dout,
        e=eout, f=fout, g=gout, h=hout,
        sel=address, out=out);
}
